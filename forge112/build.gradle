/*
 * Copyright 2020 Stanislav Batalenkov
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
    configurations.all {
        resolutionStrategy {
            force 'org.ow2.asm:asm:6.0_BETA'
        }
    }
}

apply plugin: 'idea'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'

version = parent.version
group = "com.github.quarter.gui.lib"
archivesBaseName = "GuiLib"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

sourceSets {
    main.output.resourcesDir = main.output.classesDir
}

dependencies {

    compile project(":api")
    compile project(":core")

//    testImplementation('org.junit.jupiter:junit-jupiter-api:5.6.2')
//    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.6.2')
}

shadowJar {
    dependencies {
        include(dependency(':api'))
        include(dependency(':core'))
    }
    destinationDir = file '../compiled'
    archiveName = "${parent.name}-${project.name}-${parent.version}.jar"

    //finalizedBy reobfJar
    exclude('dummyThing')
    exclude('META-INF/maven/')
    exclude('META-INF/nar/')
    exclude('module-info.class')
    exclude('META-INF/versions/')
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

idea {
    module {
        inheritOutputDirs = true
    }
}

artifacts {
    archives deobfJar
}

build.dependsOn(shadowJar)
//shadowJar.dependsOn(reobfJar)

//test {
//    //project(':core').tasks.test.execute()
//    useJUnit()
//    useJUnitPlatform()
//}
//
//jar {
//    enabled = false
//}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
